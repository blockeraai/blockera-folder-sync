const e=require("@actions/core"),a=require("@actions/github"),o=require("simple-git"),t=require("fs"),r=require("path"),{glob:s}=require("glob"),i=async()=>{const e=[],a=[];return(await s("**/blockera-pm.json")).forEach(o=>{const r=JSON.parse(t.readFileSync(o,"utf8"));r.path&&e.push(r.path),r.dependent&&r.dependent.repositories&&a.push(...r.dependent.repositories)}),{packagePaths:e,packageRepos:a}},c=async()=>{try{const t=o();await t.addConfig("user.name","blockerabot"),await t.addConfig("user.email","blockeraai+githubbot@gmail.com");const{packagePaths:s,packageRepos:c}=await i();e.info("Package paths: "+s),e.info("Dependent repos: "+c);const n=await t.diff(["--name-only","HEAD^","HEAD"]);s.forEach(a=>{n.includes(a)?e.info("Changes detected in package at "+a):e.info("No changes detected in "+a)});for(const o of c){const i=r.join("./",o);await t.clone(`https://github.com/blockeraai/${o}.git`,i),await t.cwd(i),await t.remote(["set-url","origin",`https://x-access-token:${process.env.BLOCKERABOT_PAT}@github.com/blockeraai/${o}.git`]);for(const c of s)if(o!==a.context.repo.repo){const a=r.join("./",c),o=r.join(i,c);await t.raw(["rsync","-av","--progress",a,o,"--delete"]),e.info(`Synced package from ${a} to ${o}`)}await t.checkout(["-b","sync-packages-from-primary"]),await t.add("./*"),await t.commit("Sync shared packages from primary repo"),await t.push("origin","sync-packages-from-primary"),e.info("Changes pushed to "+o);const c=a.getOctokit(process.env.GITHUB_TOKEN);await c.pulls.create({owner:a.context.repo.owner,repo:o,title:"Sync package from Primary Repo",head:"sync-packages-from-primary",base:"master",body:"This PR syncs the package from the "+process.env.REPOSITORY_NAME+" repo."})}}catch(a){e.setFailed(a.message)}};c().catch(a=>{e.setFailed(a.message)}),module.exports={run:c,readBlockeraFiles:i},exports.readBlockeraFiles=i;
