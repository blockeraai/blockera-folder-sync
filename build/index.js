const e=require("@actions/core"),a=require("@actions/github"),o=require("simple-git"),t=require("fs"),r=require("path"),{glob:s}=require("glob"),i=async()=>{try{const i=o();await i.addConfig("user.name","blockerabot"),await i.addConfig("user.email","blockeraai+githubbot@gmail.com");const{packagePaths:c,packageRepos:n}=await(async()=>{const e=[],a=[];return(await s("**/blockera-pm.json")).forEach(o=>{const r=JSON.parse(t.readFileSync(o,"utf8"));r.path&&e.push(r.path),r.dependent&&r.dependent.repositories&&a.push(...r.dependent.repositories)}),{packagePaths:e,packageRepos:a}})();e.info("Package paths: "+c),e.info("Dependent repos: "+n);const p=await i.diff(["--name-only","HEAD^","HEAD"]);c.forEach(a=>{p.includes(a)?e.info("Changes detected in package at "+a):e.info("No changes detected in "+a)});for(const o of n){const t=r.join("./",o);await i.clone(`https://github.com/blockeraai/${o}.git`,t),await i.cwd(t),await i.remote(["set-url","origin",`https://x-access-token:${process.env.BLOCKERABOT_PAT}@github.com/blockeraai/${o}.git`]);for(const s of c)if(o!==a.context.repo.repo){const a=r.join("./",s),o=r.join(t,s);await i.raw(["rsync","-av","--progress",a,o,"--delete"]),e.info(`Synced package from ${a} to ${o}`)}await i.checkout(["-b","sync-packages-from-primary"]),await i.add("./*"),await i.commit("Sync shared packages from primary repo"),await i.push("origin","sync-packages-from-primary"),e.info("Changes pushed to "+o);const s=a.getOctokit(process.env.GITHUB_TOKEN);await s.pulls.create({owner:a.context.repo.owner,repo:o,title:"Sync package from Primary Repo",head:"sync-packages-from-primary",base:"master",body:"This PR syncs the package from the "+process.env.REPOSITORY_NAME+" repo."})}}catch(a){e.setFailed(a.message)}};i().catch(a=>{e.setFailed(a.message)}),module.exports={run:i};
